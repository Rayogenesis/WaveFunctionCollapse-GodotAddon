# ---------------------------
# GDExtension Build Configuration
# Supports: Windows, Linux, macOS, Android
# ---------------------------

# Import godot-cpp environment
env = SConscript('godot-cpp/SConstruct')

# Source files
env.Append(CPPPATH=["src/"])
sources = Glob("src/*.cpp")

# Library naming convention
lib_name = "libwfc"

# Platform-specific configurations
# --------------------------------
if env['platform'] == 'windows':
    # Windows: DLL output
    env.Append(LIBPATH=[])
    target_path = f"../addons/wfc/bin/windows/{lib_name}"
    shared_lib = env.SharedLibrary(target=target_path, source=sources)

elif env['platform'] == 'linux':
    # Linux: Shared object
    target_path = f"../addons/wfc/bin/linux/{lib_name}"
    shared_lib = env.SharedLibrary(target=target_path, source=sources)

elif env['platform'] == 'macos':
    # macOS: Dynamic library with Cocoa
    env.Append(LINKFLAGS=["-Wl,-framework,Cocoa"])
    target_path = f"../addons/wfc/bin/macos/{lib_name}"
    shared_lib = env.SharedLibrary(target=target_path, source=sources)

#elif env['platform'] == 'android':
#    ndk_path = os.environ.get("ANDROID_NDK_HOME", "/usr/local/lib/android/sdk/ndk/23.2.8568313")
#    if not os.path.exists(ndk_path):
#        print(f"Error: NDK not found at {ndk_path}")
#        Exit(1)
#    env.Append(CCFLAGS=[f"--sysroot={ndk_path}/toolchains/llvm/prebuilt/linux-x86_64/sysroot"])
#    env['android_arch'] = 'arm64v8'  # Opciones: 'armv7', 'arm64v8', 'x86_64'
#    target_path = f"../addons/wfc/bin/android/{lib_name}.android.{env['android_arch']}.so"
#    shared_lib = env.SharedLibrary(target=target_path, source=sources)

# Set default target
Default(shared_lib)